{"version":3,"sources":["API/randomUser.js","components/Header.jsx","components/EmployeeRow.jsx","components/EmployeeGrid.jsx","containers/EmployeeView.jsx","App.js","index.js"],"names":["getUsers","axios","get","Header","handleFilter","className","type","placeholder","aria-label","onChange","EmployeeRow","name","cell","image","email","src","alt","first","last","EmployeeGrid","employees","handleSort","scope","onClick","map","employee","picture","large","login","uuid","EmployeeView","useState","setEmployees","EMPLOYEES","setEMPLOYEES","useEffect","then","response","data","results","catch","err","console","log","e","filteredEmployees","filter","EMPLOYEE","numericEMPLOYEE","replace","numericQuery","target","value","indexOf","sortedEmployees","sort","a","b","nameA","toUpperCase","nameB","App","ReactDOM","render","document","getElementById"],"mappings":"yMAMeA,EAJE,WACf,OAAOC,IAAMC,IAAI,wDCiBJC,EAlBA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAChB,OACE,qBAAKC,UAAU,6BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,kBAAhB,SACE,uBACEA,UAAU,oBACVC,KAAK,SACLC,YAAY,yBACZC,aAAW,SACXC,SAAUL,WCGPM,EAbK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACxC,OACE,+BACE,6BACE,qBAAKC,IAAKF,EAAOG,IAAKL,EAAKM,MAAQ,IAAMN,EAAKO,SAEhD,oBAAIb,UAAU,eAAd,SAA8BM,EAAKO,KAAO,KAAOP,EAAKM,QACtD,oBAAIZ,UAAU,eAAd,SAA8BO,IAC9B,oBAAIP,UAAU,eAAd,SAA8BS,QCqBrBK,EA5BM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACjC,OACE,wBAAOhB,UAAU,iCAAjB,UACE,gCACE,+BACE,uBACA,qBAAIiB,MAAM,MAAV,kBACO,mBAAGjB,UAAU,sBAAsBkB,QAASF,OAEnD,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGJ,gCACGF,EAAUI,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAEEd,KAAMc,EAASd,KACfC,KAAMa,EAASb,KACfC,MAAOY,EAASC,QAAQC,MACxBb,MAAOW,EAASX,OAJXW,EAASG,MAAMC,eCuCjBC,EArDM,WAAO,IAAD,EACSC,mBAAS,IADlB,mBAClBX,EADkB,KACPY,EADO,OAESD,mBAAS,IAFlB,mBAElBE,EAFkB,KAEPC,EAFO,KAIzBC,qBAAU,WACHf,GAILpB,IACGoC,MAAK,SAACC,GACLL,EAAaK,EAASC,KAAKC,SAC3BL,EAAaG,EAASC,KAAKC,YAE5BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAGf,IA2BH,OACE,gCACE,cAAC,EAAD,CAAQrC,aAXY,SAACwC,GACvB,IAAMC,EAAoBZ,EAAUa,QAAO,SAACC,GAC1C,IAAMC,EAAkBD,EAASnC,KAAKqC,QAAQ,WAAY,IACpDC,EAAeN,EAAEO,OAAOC,MAAMH,QAAQ,WAAY,IACxD,OAAkD,IAA3CD,EAAgBK,QAAQH,MAEjClB,EAAaa,MAMX,cAAC,EAAD,CAAczB,UAAWA,EAAWC,WA5BlB,WACpB,IAAMiC,EAAkBlC,EAAUmC,MAAK,SAACC,EAAGC,GACzC,IAAIC,EAAQF,EAAE7C,KAAKO,KAAKyC,cACpBC,EAAQH,EAAE9C,KAAKO,KAAKyC,cACxB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAEF,KAET5B,EAAa,YAAIsB,IACjBZ,QAAQC,IAAIvB,UC5BDyC,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.db664f53.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst getUsers = () => {\n  return axios.get(\"https://randomuser.me/api/?results=20&nat=us&noinfo\");\n};\n\nexport default getUsers;\n","import React from \"react\";\n\nconst Header = ({ handleFilter }) => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <form className=\"container-fluid\">\n          <input\n            className=\"form-control me-2\"\n            type=\"search\"\n            placeholder=\"Search by phone number\"\n            aria-label=\"Search\"\n            onChange={handleFilter}\n          />\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst EmployeeRow = ({ name, cell, image, email }) => {\n  return (\n    <tr>\n      <td>\n        <img src={image} alt={name.first + \" \" + name.last} />\n      </td>\n      <td className=\"align-middle\">{name.last + \", \" + name.first}</td>\n      <td className=\"align-middle\">{cell}</td>\n      <td className=\"align-middle\">{email}</td>\n    </tr>\n  );\n};\n\nexport default EmployeeRow;\n","import React from \"react\";\nimport EmployeeRow from \"./EmployeeRow\";\n\nconst EmployeeGrid = ({ employees, handleSort }) => {\n  return (\n    <table className=\"table table-striped table-dark\">\n      <thead>\n        <tr>\n          <th></th>\n          <th scope=\"col\">\n            NAME <i className=\"bi bi-sort-down-alt\" onClick={handleSort}></i>\n          </th>\n          <th scope=\"col\">PHONE</th>\n          <th scope=\"col\">EMAIL</th>\n        </tr>\n      </thead>\n      <tbody>\n        {employees.map((employee) => (\n          <EmployeeRow\n            key={employee.login.uuid}\n            name={employee.name}\n            cell={employee.cell}\n            image={employee.picture.large}\n            email={employee.email}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default EmployeeGrid;\n","import React, { useState, useEffect } from \"react\";\nimport getUsers from \"../API/randomUser\";\nimport Header from \"../components/Header\";\nimport EmployeeGrid from \"../components/EmployeeGrid\";\n\nconst EmployeeView = () => {\n  const [employees, setEmployees] = useState([]);\n  const [EMPLOYEES, setEMPLOYEES] = useState([]);\n\n  useEffect(() => {\n    if (!employees) {\n      return;\n    }\n\n    getUsers()\n      .then((response) => {\n        setEmployees(response.data.results);\n        setEMPLOYEES(response.data.results);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // eslint-disable-next-line\n  }, []);\n\n  const sortEmployees = () => {\n    const sortedEmployees = employees.sort((a, b) => {\n      var nameA = a.name.last.toUpperCase();\n      var nameB = b.name.last.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n    setEmployees([...sortedEmployees]);\n    console.log(employees);\n  };\n\n  const filterEmployees = (e) => {\n    const filteredEmployees = EMPLOYEES.filter((EMPLOYEE) => {\n      const numericEMPLOYEE = EMPLOYEE.cell.replace(/[^0-9]/gi, \"\");\n      const numericQuery = e.target.value.replace(/[^0-9]/gi, \"\");\n      return numericEMPLOYEE.indexOf(numericQuery) !== -1;\n    });\n    setEmployees(filteredEmployees);\n  };\n\n  return (\n    <div>\n      <Header handleFilter={filterEmployees}/>\n      <EmployeeGrid employees={employees} handleSort={sortEmployees}/>\n    </div>\n  );\n};\n\nexport default EmployeeView;\n","import EmployeeView from \"./containers/EmployeeView\";\n\nconst App = () => {\n  return (\n    <div>\n      <EmployeeView />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}